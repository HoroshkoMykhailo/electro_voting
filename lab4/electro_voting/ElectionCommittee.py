from electro_voting.key_generation import verify_signature

class ElectionCommittee:
    def __init__(self, name):
        self.name = name
        self.voter_list = set()
        self.received_ballots = []
        print(f"üè¢ –°—Ç–≤–æ—Ä–µ–Ω–æ –í–∏–±–æ—Ä—á—É –ö–æ–º—ñ—Å—ñ—é '{self.name}'.")

    def set_voter_list(self, voters):
        """–û—Ç—Ä–∏–º—É—î —Å–≤–æ—é —á–∞—Å—Ç–∏–Ω—É —Å–ø–∏—Å–∫—É –≤–∏–±–æ—Ä—Ü—ñ–≤ –≤—ñ–¥ –¶–í–ö."""
        self.voter_list = set(voters)
        print(f"[{self.name}]: –û—Ç—Ä–∏–º–∞–ª–∞ —Å–ø–∏—Å–æ–∫ –∑ {len(self.voter_list)} –≤–∏–±–æ—Ä—Ü—ñ–≤.")

    def receive_ballot(self, ballot):
        """–ö—Ä–æ–∫ 4: –û—Ç—Ä–∏–º—É—î –±—é–ª–µ—Ç–µ–Ω—å, –ø–µ—Ä–µ–≤—ñ—Ä—è—î –≤–∏–±–æ—Ä—Ü—è —Ç–∞ –ï–¶–ü."""
        voter_name = ballot['voter_name']
        
        if voter_name not in self.voter_list:
            print(f"[{self.name}]: ‚ùå '{voter_name}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π —É –º–æ—î–º—É —Å–ø–∏—Å–∫—É. –ë—é–ª–µ—Ç–µ–Ω—å –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ.")
            return

        is_valid = verify_signature(
            ballot['voter_public_key'], 
            ballot['signature'], 
            ballot['encrypted_part']
        )
        
        if not is_valid:
            print(f"[{self.name}]: ‚ùå –ï–¶–ü –¥–ª—è '{voter_name}' –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π. –ë—é–ª–µ—Ç–µ–Ω—å –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ.")
            return
            
        print(f"[{self.name}]: ‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ –≤–∞–ª—ñ–¥–Ω–∏–π –±—é–ª–µ—Ç–µ–Ω—å –≤—ñ–¥ '{voter_name}'.")
        self.received_ballots.append({
            'anonymous_id': ballot['anonymous_id'],
            'encrypted_part': ballot['encrypted_part']
        })

    def publish_data(self):
        """–ö—Ä–æ–∫ 5: –ü—É–±–ª—ñ–∫—É—î –≤—Å—ñ –æ—Ç—Ä–∏–º–∞–Ω—ñ –∞–Ω–æ–Ω—ñ–º–Ω—ñ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω—ñ –±—é–ª–µ—Ç–µ–Ω—ñ."""
        print(f"\nüì¢ [{self.name}] –ü—É–±–ª—ñ–∫—É—î –æ—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ:")
        for ballot in self.received_ballots:
            print(f"  - ID: {ballot['anonymous_id']}, –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∞ —á–∞—Å—Ç–∏–Ω–∞: {ballot['encrypted_part']}")
        return self.received_ballots